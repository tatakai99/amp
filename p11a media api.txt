MainActivity.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:background="@color/black"
    android:layout_gravity="center">
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/audio"
        android:text="Audio"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        android:layout_marginTop="200dp"
        android:layout_marginLeft="150dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/video"
        android:text="Video"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="@+id/audio"
        android:layout_marginTop="200dp"
        android:layout_marginLeft="150dp"/>
</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.kt:
package com.example.abc

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        var audio = findViewById<Button>(R.id.audio)
        var video = findViewById<Button>(R.id.video)
        audio.setOnClickListener {
            var intent = Intent(this@MainActivity,Audio::class.java)
            startActivity(intent)
        }
        video.setOnClickListener {
            var intent = Intent(this@MainActivity,Video::class.java)
            startActivity(intent)
        }
    }
}



Create android resource directory under res folder to store audio or video file:

Change the resource type to raw:

main_video.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/black"
    tools:context=".Video">
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/textView"
        android:layout_marginTop="20dp"
        android:gravity="center"
        android:text="Duaa"
        android:textColor="@color/white"
        android:layout_marginBottom="383dp"
        android:textSize="50dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>
    <VideoView
        android:layout_width="match_parent"
        android:layout_height="400dp"
        android:id="@+id/videoView1"
        app:layout_constraintTop_toBottomOf="@+id/textView"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"/>
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/playButton"
        app:layout_constraintTop_toBottomOf="@+id/videoView1"
        android:text="Play"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"/>
</androidx.constraintlayout.widget.ConstraintLayout>

video.kt:
package com.example.abc
import android.net.Uri
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.MediaController
import android.widget.VideoView
class Video : AppCompatActivity() {
    private lateinit var videoView: VideoView
    private lateinit var mediaController: MediaController
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_video)
        var playButton = findViewById<Button>(R.id.playButton)
        videoView = findViewById(R.id.videoView1)
        mediaController= MediaController(this)
        videoView.setMediaController(mediaController)
        videoView.setVideoURI(Uri.parse("android.resource://com.example.abc/${R.raw.sample}"))

        playButton.setOnClickListener {
            if (videoView.isPlaying){
                videoView.pause()
                playButton.text="Play"
            }else{
                videoView.start()
                playButton.text="Pause"
            }
        }
    }
    override fun onDestroy() {
        super.onDestroy()
        videoView.stopPlayback()
    }
}

main_audio.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/black"
    tools:context=".Audio">
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/textView"
        android:layout_marginTop="20dp"
        android:gravity="center"
        android:text="Humnava mere"
        android:textColor="@color/white"
        android:layout_marginBottom="383dp"
        android:textSize="50dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>
    <ImageView
        android:layout_width="match_parent"
        android:layout_height="300dp"
        android:id="@+id/logo"
        android:layout_marginTop="20dp"

        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView"/>
    <SeekBar
        android:layout_width="match_parent"
        android:layout_height="70dp"
        android:id="@+id/seekBar"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"
        app:layout_constraintTop_toBottomOf="@+id/logo"/>
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/playButton"
        app:layout_constraintTop_toBottomOf="@+id/seekBar"
        android:text="Play"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"/>
</androidx.constraintlayout.widget.ConstraintLayout>

Audio.kt
package com.example.abc


import android.media.MediaPlayer
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.SeekBar
import kotlinx.coroutines.*

class Audio : AppCompatActivity() {
    private lateinit var mediaPlayer: MediaPlayer
    private lateinit var seekBar: SeekBar
    private var seekBarUpdateJob: Job? = null
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_audio)
        var playButton = findViewById<Button>(R.id.playButton)
        seekBar = findViewById(R.id.seekBar)
        mediaPlayer = MediaPlayer.create(this, R.raw.humnava_mere)
        seekBar.max = mediaPlayer.duration
        seekBar.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener {
            override fun onProgressChanged(p0: SeekBar?, p1: Int, p2: Boolean) {
                if (p2) {
                    mediaPlayer.seekTo(p1)
                }
            }

            override fun onStartTrackingTouch(p0: SeekBar?) {

            }

            override fun onStopTrackingTouch(p0: SeekBar?) {

            }
        })
        playButton.setOnClickListener {
            if (mediaPlayer.isPlaying) {
                mediaPlayer.pause()
                playButton.text = "Play"
                seekBarUpdateJob?.cancel()
            } else {
                mediaPlayer.start()
                playButton.text = "pause"
                seekBarUpdateJob = GlobalScope.launch(Dispatchers.Main) {
                    while (mediaPlayer.isPlaying) {
                        seekBar.progress = mediaPlayer.currentPosition
                        delay(100)
                    }
                }
            }
        }
    }

    override fun onDestroy() {
        super.onDestroy()
        seekBarUpdateJob?.cancel()
        mediaPlayer.release()
    }
}

AndroidManifest.xml:
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.abc">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:usesCleartextTraffic="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Abc"
        tools:targetApi="31">
        <activity
            android:name=".Audio"
            android:exported="true">

        </activity>
        <activity
            android:name=".Video"
            android:exported="true">

        </activity>
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

