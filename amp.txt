2Programming Resources 
Android Resources: (Color, Theme, String, Drawable, Dimension, Image)3Programming Activities and fragments
Activity Life Cycle, Activity methods, Multiple Activities, Life Cycle of fragments and multiple fragments.4Programs related to different Layouts
Coordinate, Linear, Relative, Table, Absolute, Frame, List View, Grid View5Programming UI elements
AppBar, Fragments, UI Components6Programming menus, dialog, dialog fragment7Programs on Intents, Events, Listeners and Adapters
The Android Intent Class, Using Events and Event Listeners8Programs on Services, notification and broadcast receivers9Database Programming with SQLite10Programming threads, handles and asynchronized programs11Programming Media API and Telephone API12Programming Security and permissions13Programming Network Communications and Services (JSON)






















Pract2
Programming Resources Android Resources: (Color, Theme, String, Drawable, Dimension, Image),
xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:background="@color/black"
    android:theme="@style/Theme.Trying"
    android:orientation="vertical">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Welcome to my program"
        android:id="@+id/test1"
        android:textSize="25sp"
        android:textColor="@color/grey"/>
    <ImageView
        android:layout_width="match_parent"
        android:layout_height="400dp"
        android:id="@+id/image1"
        android:src="@drawable/goku"/>
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/button1"
        android:textColor="@color/purple_200"
        android:text="Hit Me"/>

</LinearLayout>

kt
package com.example.myapplicationresources

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView


class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val image1 = findViewById<ImageView>(R.id.image1)
        val button1 = findViewById<Button>(R.id.button1)

        button1.setOnClickListener { image1.setImageResource(R.drawable.gokus) }
        }
    }

colors.xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="purple_200">#FFBB86FC</color>
    <color name="purple_500">#FF6200EE</color>
    <color name="purple_700">#FF3700B3</color>
    <color name="teal_200">#FF03DAC5</color>
    <color name="teal_700">#FF018786</color>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>
    <color name="grey">#808080</color>
</resources>

Thems.xml
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.MyApplicationResources" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>
    <style name="Theme.Trying" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <item name="colorPrimary">@color/black</item>
        <item name="colorPrimaryVariant">@color/white</item>
        <item name="colorOnPrimary">@color/white</item>
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
    </style>
</resources>



















Pract 3
Programming Activities and fragments Activity Life Cycle, Activity methods, Multiple Activities, Life Cycle of fragments and multiple fragments.

activityMain.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>


mainActivity.kt

package com.example.pract_3
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        print("onCreate") }
    override fun onStart(){ super.onStart()
        print("onStart") }
    override fun onResume(){ super.onResume()
        print("onResume") }
    override fun onStop(){ super.onStop()
        print("onStop") }
    override fun onDestroy(){ super.onDestroy()
        print("onDestroy") }
    override fun onRestart(){ super.onRestart()
        print("onRestart") }
    fun print(msg:String){
        Log.d("Activity State : ", msg)
    }
}







Pract4 
Programs related to different Layouts
Coordinate, Linear, Relative, Table, Absolute, Frame, List View, Grid View.
LinearLayout
xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    tools:context=".MainActivity">

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/qwerty"
        android:text="Click Me"/>

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/turf"
        android:text="Kick Me"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center">

        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/qwerty1"
            android:text="Click Me 2"
            android:layout_marginRight="20dp"/>
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/turf1"
            android:text="Kick Me 2"/>
    </LinearLayout>
</LinearLayout>

Kt
package com.example.mylinearlayout

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.Toast

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val button1 = findViewById<Button>(R.id.qwerty)
        val button2 = findViewById<Button>(R.id.turf)
        val button3 = findViewById<Button>(R.id.qwerty1)
        val button4 = findViewById<Button>(R.id.turf1)

        button1.setOnClickListener { Toast.makeText(this@MainActivity, "You Clicked Me" , Toast.LENGTH_SHORT).show() }
        button2.setOnClickListener { Toast.makeText(this@MainActivity, "You Kicked Me" , Toast.LENGTH_SHORT).show() }
        button3.setOnClickListener { Toast.makeText(this@MainActivity, "You clicked me again" ,
            Toast.LENGTH_SHORT).show() }
        button4.setOnClickListener { Toast.makeText(this@MainActivity, "You kicked me again" ,
            Toast.LENGTH_SHORT).show() }

    }
}


RelativeLayout
Xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/qwerty"
        android:text="Click Me"
        android:layout_alignParentLeft="true"/>

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/turf"
        android:text="Kick me"
        android:layout_alignParentRight="true"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/qwerty1"
        android:text="Click Me 1"
        android:layout_alignParentBottom="true"/>

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/turf1"
        android:text="Click Me 2"
        android:layout_centerHorizontal="true"/>


</RelativeLayout>

Kt
package com.example.myrelativelayout

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.Toast

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val button1 = findViewById<Button>(R.id.qwerty)
        val button2 = findViewById<Button>(R.id.turf)
        val button3 = findViewById<Button>(R.id.qwerty1)
        val button4 = findViewById<Button>(R.id.turf1)
        button1.setOnClickListener {
            Toast.makeText(this@MainActivity, "You clicked me", Toast.LENGTH_SHORT).show() }
        button2.setOnClickListener {
            Toast.makeText(this@MainActivity, "You kicked me", Toast.LENGTH_SHORT).show() }
        button3.setOnClickListener {
            Toast.makeText(this@MainActivity, "You clicked me again", Toast.LENGTH_SHORT).show() }
        button4.setOnClickListener {
            Toast.makeText(this@MainActivity, "You kicked me again", Toast.LENGTH_SHORT).show() }
    }
}

Calculator using Table Layout
Xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:background="@color/black"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/editText"
        android:layout_width="match_parent"
        android:layout_height="600dp"
        android:layout_marginRight="20dp"
        android:layout_marginTop="10dp"
        android:layout_marginLeft="20dp"
        android:layout_marginBottom="2dp"
        android:layout_weight="1"
        android:textColor="@color/white"
        android:ems="10"
        android:layout_gravity="right|center"
        android:inputType="textPersonName"
        android:text="0"
        android:textSize="100dp"/>
    <TableLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginRight="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginBottom="10dp">
        <TableRow
            android:layout_width="match_parent"
            android:layout_height="match_parent">
            <Button
                android:id="@+id/b1"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="cEvent"
                android:text="C"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b2"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="0"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b3"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="operatorEvent"
                android:text="*"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b4"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="8dp"
                android:layout_weight="1"
                android:onClick="operatorEvent"
                android:text="-"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
        </TableRow>
        <TableRow
            android:layout_width="match_parent"
            android:layout_height="match_parent">
            <Button
                android:id="@+id/b5"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="7"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b6"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="8"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b7"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="9"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b8"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="8dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="+"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
        </TableRow>
        <TableRow
            android:layout_width="match_parent"
            android:layout_height="match_parent">
            <Button
                android:id="@+id/b9"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="4"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b10"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="5"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b11"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="6"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b12"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="8dp"
                android:layout_weight="1"
                android:onClick="operatorEvent"
                android:text="/"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
        </TableRow>
        <TableRow
            android:layout_width="match_parent"
            android:layout_height="match_parent">
            <Button
                android:id="@+id/b13"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="1"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b14"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="2"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b15"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="10dp"
                android:layout_weight="1"
                android:onClick="numberEvent"
                android:text="3"
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
            <Button
                android:id="@+id/b16"
                android:layout_width="30pt"
                android:layout_height="30pt"
                android:layout_marginRight="8dp"
                android:layout_weight="1"
                android:onClick="equalEvent"
                android:text="="
                android:textColor="@color/teal_200"
                android:textSize="40dp"></Button>
        </TableRow>
    </TableLayout>
</LinearLayout>

kt
package com.example.mycalculator

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.EditText


class MainActivity : AppCompatActivity() {
    var isNewOp = true
    var oldNumber = ""
    var oper = "+"
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
    }
    fun numberEvent(view: View){
        var editText = findViewById<EditText>(R.id.editText)
        if (isNewOp)
            editText.setText("")
        isNewOp=false
        var bclick : String = editText.text.toString()
        var bselect : Button = view as Button
        var b2 = findViewById<Button>(R.id.b2)
        var b5 = findViewById<Button>(R.id.b5)
        var b6 = findViewById<Button>(R.id.b6)
        var b7 = findViewById<Button>(R.id.b7)
        var b9 = findViewById<Button>(R.id.b9)
        var b10 = findViewById<Button>(R.id.b10)
        var b11 = findViewById<Button>(R.id.b11)
        var b13 = findViewById<Button>(R.id.b13)
        var b14 = findViewById<Button>(R.id.b14)
        var b15 = findViewById<Button>(R.id.b15)
        when(bselect.id){
            b2.id->bclick += "0"
            b5.id->bclick +="7"
            b6.id->bclick +="8"
            b7.id->bclick +="9"
            b9.id->bclick +="4"
            b10.id->bclick +="5"
            b11.id->bclick +="6"
            b13.id->bclick +="1"
            b14.id->bclick +="2"
            b15.id->bclick +="3"

        }
        editText.setText(bclick)

    }
    fun operatorEvent(view: View){
        var b12 = findViewById<Button>(R.id.b12)
        var b8 = findViewById<Button>(R.id.b8)
        var b3 = findViewById<Button>(R.id.b3)
        var b4 = findViewById<Button>(R.id.b4)
        isNewOp=true
        var editText = findViewById<EditText>(R.id.editText)
        oldNumber = editText.text.toString()
        var bselect = view as Button
        when (bselect.id){
            b12.id->oper="/"
            b8.id->oper="+"
            b3.id->oper="*"
            b4.id->oper="-"
        }
    }
    fun equalEvent(view: View){
        var editText = findViewById<EditText>(R.id.editText)
        var newnum = editText.text.toString()
        var result=0.0
        when(oper){
            "+"->result = oldNumber.toDouble()+ newnum.toDouble()
            "*"->result = oldNumber.toDouble()* newnum.toDouble()
            "-"->result = oldNumber.toDouble()- newnum.toDouble()
            "/"->result = oldNumber.toDouble()/ newnum.toDouble()
        }
        editText.setText(result.toString())
    }
    fun cEvent(view: View){
        var editText = findViewById<EditText>(R.id.editText)
        editText.setText("0")
    }
}

GridLayout
Xml
<?xml version="1.0" encoding="utf-8"?>
<GridLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:rowCount="3"
    android:columnCount="2"
    android:layout_marginTop="20dp"
    android:layout_marginLeft="20dp"
    tools:context=".MainActivity">

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/qwerty"
        android:text="CLICK ME"
        android:layout_marginRight="10dp"
        android:layout_marginBottom="20dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/asdf"
        android:text="KICK ME"
        android:layout_marginRight="10dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/kiol"
        android:text="SMILE"
        android:layout_marginRight="10dp"
        android:layout_marginBottom="20dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/zxcv"
        android:text="CLICK ME 2"
        android:layout_marginRight="10dp"
        android:layout_marginBottom="20dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/mnop"
        android:text="KICK ME 2"
        android:layout_marginRight="10dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/buit"
        android:text="SMILE 2"
        android:layout_marginRight="10dp"
        android:layout_marginBottom="20dp"/>

</GridLayout>

Kt
package com.example.mygridlayout

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.Toast

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val btn=findViewById<Button>(R.id.qwerty)
        val btn2=findViewById<Button>(R.id.asdf)
        val btn3=findViewById<Button>(R.id.zxcv)
        val btn4=findViewById<Button>(R.id.mnop)
        val btn5=findViewById<Button>(R.id.kiol)
        val btn6=findViewById<Button>(R.id.buit)

        btn.setOnClickListener{
            Toast.makeText( this@MainActivity,"you clicked me",Toast.LENGTH_SHORT).show() }
        btn2.setOnClickListener{
            Toast.makeText( this@MainActivity,"you kicked me",Toast.LENGTH_SHORT).show() }
        btn3.setOnClickListener{
            Toast.makeText( this@MainActivity,"you clicked me again",Toast.LENGTH_SHORT).show() }
        btn4.setOnClickListener{
            Toast.makeText( this@MainActivity,"you kicked me again",Toast.LENGTH_SHORT).show() }
        btn5.setOnClickListener{
            Toast.makeText( this@MainActivity,"you smiled me",Toast.LENGTH_SHORT).show() }
        btn6.setOnClickListener{
            Toast.makeText( this@MainActivity,"you smiled me again",Toast.LENGTH_SHORT).show() }
    }
}





























Practical 5
Programming UI elements
AppBar, Fragments, UI Components
activityMain.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/black"
    tools:context=".MainActivity">

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:layout_marginStart="60dp"
        android:layout_marginTop="50dp"
        android:src="@drawable/insta"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>
    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="20dp"
        android:layout_marginTop="50dp"
        android:layout_marginEnd="70dp"
        android:fontFamily="sans-serif-medium"
        android:text="Instagram"
        android:textColor="@color/white"
        android:textSize="40dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/imageView"
        app:layout_constraintTop_toTopOf="parent" />
    <androidx.cardview.widget.CardView
        android:id="@+id/cardView"
        android:layout_width="match_parent"
        android:layout_height="450dp"
        android:layout_marginStart="20dp"
        android:layout_marginTop="70dp"
        android:layout_marginEnd="20dp"
        app:cardCornerRadius="30dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView">
    <LinearLayout
        android:id="@+id/user"
        android:layout_width="match_parent"
        android:layout_height="450dp"
        android:background="@drawable/gradient"
        android:orientation="vertical"
        tools:ignore="MissingConstraints">
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:gravity="center"
            android:text="Login"
            android:textColor="@color/purple_500"
            android:textSize="30dp"/>
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:orientation="horizontal">
            <ImageView
                android:layout_width="60dp"
                android:layout_height="60dp"
                android:layout_marginLeft="20dp"
                android:layout_marginTop="10dp"
                android:src="@drawable/user"/>

            <EditText
                android:id="@+id/username"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="20dp"
                android:layout_marginTop="20dp"
                android:layout_marginRight="20dp"
                android:minHeight="48dp"
                tools:ignore="SpeakableTextPresentCheck" />
        </LinearLayout>
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:orientation="horizontal">

            <ImageView
                android:layout_width="60dp"
                android:layout_height="50dp"
                android:layout_marginLeft="20dp"
                android:layout_marginTop="10dp"
                android:src="@drawable/passkey"/>

            <EditText
                android:id="@+id/password"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="20dp"
                android:layout_marginTop="20dp"
                android:layout_marginRight="20dp"
                android:minHeight="48dp"
                tools:ignore="SpeakableTextPresentCheck" />
        </LinearLayout>
        <Button
            android:id="@+id/loginbtn"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="50dp"
            android:layout_marginTop="40dp"
            android:layout_marginRight="50dp"
            android:background="@drawable/gradient2"
            android:text="Login"
            android:textSize="25dp"/>
        <TextView
            android:id="@+id/signup"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginLeft="20dp"
            android:layout_marginTop="30dp"
            android:layout_marginRight="20dp"
            android:gravity="center"
            android:text="Not an account ? Sign up"
            android:textColor="@color/purple_200"
            android:textSize="20dp"/>

    </LinearLayout>
    </androidx.cardview.widget.CardView>

</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.kt

package com.example.pract5
import android.content.Intent
import android.widget.Button
import android.widget.EditText
import android.widget.ImageView
import android.widget.LinearLayout
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.cardview.widget.CardView
import android.os.Bundle as Bundle

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val logo = findViewById<ImageView>(R.id.imageView)
        val logotext = findViewById<TextView>(R.id.textView)
        val card = findViewById<CardView>(R.id.cardView)
        val user = findViewById<LinearLayout>(R.id.user)
        val username = findViewById<EditText>(R.id.username)
        val password = findViewById<EditText>(R.id.password)
        val loginbtn = findViewById<Button>(R.id.loginbtn)
        val signup = findViewById<TextView>(R.id.signup)

        loginbtn.setOnClickListener {
            if (username.text.toString()=="admin"&& password.text.toString()=="123456")
            {
                val Intent=Intent(this,MainActivity2::class.java)
                startActivity(intent)
            }
            else{Toast.makeText(this@MainActivity,"Invalid Credentials",Toast.LENGTH_SHORT).show()}
        }
        signup.setOnClickListener { Toast.makeText(this@MainActivity,"Sign Up",Toast.LENGTH_SHORT).show() }
    }
}

MainACtivity2.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity2">
    <androidx.appcompat.widget.Toolbar
        android:id="@+id/mtool"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="@color/purple_500"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="@+id/textView2"
        app:navigationIcon="@drawable/baseline_menu_24"
        app:title="Menu"
        app:titleMarginStart="10dp"/>

    <TextView
        android:id="@+id/textView2"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:gravity="center"
        android:text="Successful"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        tools:ignore="TextSizeCheck" />

</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity2.kt

package com.example.pract5

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.Menu
import android.view.MenuItem
import android.widget.Toast
import androidx.appcompat.widget.Toolbar

class MainActivity2 : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main2)
        setSupportActionBar(findViewById(R.id.mtool))
    }

    override fun onCreateOptionsMenu(menu: Menu?): Boolean {
        menuInflater.inflate(R.menu.mainmenu,menu)
        return super.onCreateOptionsMenu(menu)
    }

    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        return when(item.itemId){
            R.id.qwerty->{
                Toast.makeText(this@MainActivity2,"You clicked on add image",Toast.LENGTH_SHORT).show()
                return true
            }
            R.id.asdf->{
                Toast.makeText(this@MainActivity2,"You clicjed on notification",Toast.LENGTH_SHORT).show()
                return true
            }
            else->super.onOptionsItemSelected(item)
    }
    }
}

mainmenu.xml

<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <item
        android:id="@+id/qwerty"
        android:icon="@drawable/baseline_add_photo_alternate_24"
        app:showAsAction="always"
        android:title="TODO" />
    <item
        android:id="@+id/asdf"
        android:title="Notification"
        app:showAsAction="never"
        />
</menu>

Gradient.xml

<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">

    <gradient
        android:startColor="@color/teal_200"
        android:centerColor="@color/white"
        android:endColor="@color/teal_200"
        />
</shape>

Gradient2.xml

<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">

    <gradient
        android:startColor="@color/purple_500"
        android:centerColor="@color/white"
        android:endColor="@color/purple_200"/>
    <corners android:radius="20dp"/>
</shape>

AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.AppCompat.DayNight.NoActionBar"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity2"
            android:exported="false">
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
    </application>

</manifest>

















Practical 6
Programming menus, dialog, dialog fragments

activityMain.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="@color/purple_500"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:navigationIcon="@drawable/menu"
        app:title="Menu"/>
    <Button
        android:layout_width="wrap_content"
        android:id="@+id/btn1"
        android:layout_height="wrap_content"
        android:layout_marginStart="50dp"
        android:layout_marginTop="20dp"
        android:layout_marginEnd="50dp"
        android:layout_marginBottom="50dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/toolbar"
        android:text="@string/click_me"
        android:textSize="30sp"/>
</androidx.constraintlayout.widget.ConstraintLayout>

mainActivity.kt
package com.example.pract6
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.os.PersistableBundle
import android.view.Menu
import android.view.MenuItem
import android.widget.Button
import android.widget.Toast
import androidx.appcompat.app.AlertDialog

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        setSupportActionBar(findViewById(R.id.toolbar)) }
    override fun onCreateOptionsMenu(menu: Menu?): Boolean { menuInflater.inflate(R.menu.mainmenu,menu)
        return super.onCreateOptionsMenu(menu) }

    override fun onPrepareOptionsMenu(menu: Menu?): Boolean {
        menu?.getItem(2)?.isEnabled = false
        menu?.getItem(4)?.isVisible=false
        return super.onPrepareOptionsMenu(menu)
    }
    override fun onOptionsItemSelected(item: MenuItem): Boolean { return when(item.itemId){
            R.id.notificationmenu->{
                Toast.makeText(this@MainActivity,"Notification",Toast.LENGTH_SHORT).show()
                return true }
            R.id.adding->{ Toast.makeText(this@MainActivity,"Add",Toast.LENGTH_SHORT).show()
                return true }
            R.id.like->{ Toast.makeText(this@MainActivity,"Like",Toast.LENGTH_SHORT).show()
                return true }
            R.id.share->{ Toast.makeText(this@MainActivity,"Subscribe",Toast.LENGTH_SHORT).show()
                return true }
            R.id.about->{ Toast.makeText(this@MainActivity,"Made With Love",Toast.LENGTH_SHORT).show()
                return true }
            else->super.onOptionsItemSelected(item) }
    }
    override fun onBackPressed() {
        val builder=AlertDialog.Builder(this)
        builder.setTitle("Are you sure")
        builder.setMessage("Are you sure you want to exit the app ?")
        builder.setPositiveButton("Yes",{dialogInterface,i->finish()})
        builder.setNegativeButton("No",{dialogInterface,i->})
        builder.show()
    }
}

mainmenu.xml

package com.example.pract6
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.os.PersistableBundle
import android.view.Menu
import android.view.MenuItem
import android.widget.Button
import android.widget.Toast
import androidx.appcompat.app.AlertDialog

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        setSupportActionBar(findViewById(R.id.toolbar)) }
    override fun onCreateOptionsMenu(menu: Menu?): Boolean { menuInflater.inflate(R.menu.mainmenu,menu)
        return super.onCreateOptionsMenu(menu) }

    override fun onPrepareOptionsMenu(menu: Menu?): Boolean {
        menu?.getItem(2)?.isEnabled = false
        menu?.getItem(4)?.isVisible=false
        return super.onPrepareOptionsMenu(menu)
    }
    override fun onOptionsItemSelected(item: MenuItem): Boolean { return when(item.itemId){
            R.id.notificationmenu->{
                Toast.makeText(this@MainActivity,"Notification",Toast.LENGTH_SHORT).show()
                return true }
            R.id.adding->{ Toast.makeText(this@MainActivity,"Add",Toast.LENGTH_SHORT).show()
                return true }
            R.id.like->{ Toast.makeText(this@MainActivity,"Like",Toast.LENGTH_SHORT).show()
                return true }
            R.id.share->{ Toast.makeText(this@MainActivity,"Subscribe",Toast.LENGTH_SHORT).show()
                return true }
            R.id.about->{ Toast.makeText(this@MainActivity,"Made With Love",Toast.LENGTH_SHORT).show()
                return true }
            else->super.onOptionsItemSelected(item) }
    }
    override fun onBackPressed() {
        val builder=AlertDialog.Builder(this)
        builder.setTitle("Are you sure")
        builder.setMessage("Are you sure you want to exit the app ?")
        builder.setPositiveButton("Yes",{dialogInterface,i->finish()})
        builder.setNegativeButton("No",{dialogInterface,i->})
        builder.show()
    }
}

AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.AppCompat.DayNight.NoActionBar"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity2"
            android:exported="false">
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
    </application>

</manifest>


























Practical 7
Programs on Intents, Events, Listeners and Adapters
The Android Intent Class, Using Events and Event Listeners
mainActivity.xml
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/resauto" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".MainActivity2">
<ListView android:layout_width="match_parent" 
android:layout_height="match_parent" 
android:id="@+id/list" 
app:layout_constraintBottom_toTopOf="parent" 
app:layout_constraintEnd_toEndOf="parent" 
app:layout_constraintStart_toStartOf="parent" 
app:layout_constraintTop_toTopOf="parent"/>
</androidx.constraintlayout.widget.ConstraintLayout>

activityMain.kt

package com.example.myapplication

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.ArrayAdapter
import android.widget.ListView

class MainActivity2 : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main2)

        val list=findViewById<ListView>(R.id.list)

        var items= arrayOf("One","Two","Three","Four","Five")
        var arrayAdapter=ArrayAdapter(this,R.layout.list_row,R.id.item_text,items)
        list.adapter=arrayAdapter
    }
}

Practical 8
Programs on Services, notification and broadcast receivers
Pract 8th A
Main Activity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:gravity="center"
    android:padding="16dp"
    android:orientation="vertical"
    tools:context=".MainActivity">

   <Button
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:id="@+id/btn_start_service"
       android:text="Start Music"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="20dp"
        android:id="@+id/btn_stop_service"
        android:text="Stop Music"/>
</LinearLayout>

Music Service.kt

package com.example.pract8

import android.content.Intent
import android.media.MediaPlayer
import android.os.IBinder
import android.provider.Settings
import android.app.Service


class MusicService: Service(){
    private lateinit var player: MediaPlayer
    override fun onStartCommand(intent: Intent,flags:Int,StartId:Int):Int{
        player=MediaPlayer.create(this,Settings.System.DEFAULT_RINGTONE_URI)
        player.setLooping(true)
        player.start()
        return START_STICKY
    }
    override fun onDestroy(){
        super.onDestroy()
        player.stop()
    }
    override fun onBind(intent: Intent):IBinder?{
        return null
    }
}

Android Manifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Pract8"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <service android:name=".MusicService" android:enabled="true"/>
    </application>

</manifest>

Main Activity.Kt

package com.example.pract8

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val btn_start = findViewById<Button>(R.id.btn_start_service)
        val btn_stop= findViewById<Button>(R.id.btn_stop_service)

        btn_start.setOnClickListener{
            startService(Intent(this,MusicService::class.java))
        }
        btn_stop.setOnClickListener{
            stopService(Intent(this,MusicService::class.java))
        }
    }
}

Pract 8th B:
Main Manifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Prac8b"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

Main Activity.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/btn_non_clickable"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="non clickable notification"
        android:layout_marginBottom="16dp"/>
    <Button
        android:id="@+id/btn_clickable"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Clickable notification"
        android:layout_below="@+id/btn_non_clickable"/>

</RelativeLayout>

Main Activity.kt

package com.example.prac8b

import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.PendingIntent
import android.content.Context
import android.content.Intent
import android.graphics.Color
import android.os.Build
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import androidx.core.app.NotificationCompat

class MainActivity : AppCompatActivity() {
    private lateinit var nonClickableNotificationManager: NotificationManager
    private lateinit var clickableNotificationManager: NotificationManager
    private var CHANNEL_ID="my_channel_01"
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val btnnonclick = findViewById<Button>(R.id.btn_non_clickable)
        val btnclick = findViewById<Button>(R.id.btn_clickable)
        nonClickableNotificationManager=getSystemService(Context.NOTIFICATION_SERVICE)as NotificationManager
        clickableNotificationManager=getSystemService(Context.NOTIFICATION_SERVICE)as NotificationManager
        if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O){
            val channel=NotificationChannel(CHANNEL_ID,"My Channel",NotificationManager.IMPORTANCE_HIGH)
            channel.description="My channel Description"
            channel.lightColor=Color.RED
            nonClickableNotificationManager.createNotificationChannel(channel)
            clickableNotificationManager.createNotificationChannel(channel)
        }
        btnnonclick.setOnClickListener {
            val notification=createNonClickableNotification()
            nonClickableNotificationManager.notify(0,notification.build())
        }
        btnclick.setOnClickListener {
            val notification=createClickableNotification()
            clickableNotificationManager.notify(1,notification.build())
        }
    }
    private fun createNonClickableNotification():NotificationCompat.Builder{
        return NotificationCompat.Builder(this,CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_launcher_foreground)
            .setContentTitle("Non Clickable Notification")
            .setContentText("This is non-clickable notification")
            .setAutoCancel(true)
    }
    private fun createClickableNotification():NotificationCompat.Builder{
        val intent= Intent(this,MainActivity::class.java)
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP)
        val pendingIntent=PendingIntent.getActivity(this,1,intent,PendingIntent.FLAG_IMMUTABLE
                or PendingIntent.FLAG_UPDATE_CURRENT)
        return NotificationCompat.Builder(this,CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_launcher_foreground)
            .setContentTitle("Clickable Notification")
            .setContentText("This is clickable notification")
            .setAutoCancel(true)
            .setContentIntent(pendingIntent)
    }
}

Pract 8th C:

Main Activity.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

Manifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Prac8c"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <receiver android:name=".Myreceiver" android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.AIRPLANE_MODE"></action>
            </intent-filter>
        </receiver>
    </application>

</manifest>

Receiver.kt

package com.example.prac8c

import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.widget.Toast

class Myreceiver:BroadcastReceiver() {
    override fun onReceive(context: Context?, intent: Intent?) {
        Toast.makeText(context,"Broadcast is called",Toast.LENGTH_LONG).show()
    }
}

Main Activity.kt

package com.example.prac8c

import android.content.Intent
import android.content.IntentFilter
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle

class MainActivity : AppCompatActivity() {
    var myReceiver=Myreceiver()
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        register()
    }
    private fun register(){
        var filter=IntentFilter()
        filter.addAction(Intent.ACTION_AIRPLANE_MODE_CHANGED)
        registerReceiver(myReceiver,filter)
    }

    override fun onDestroy() {
        super.onDestroy()
        unregisterReceiver(myReceiver)
    }
}












Pract 9th:
Database Programming with SQLite

Main Activity.xml:

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">
    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/studentId"
        android:ems="10"
        android:inputType="number"
        android:hint="Student ID"/>

    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/studentName"
        android:ems="10"
        android:inputType="textPersonName"
        android:hint="Student Name"/>

    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/studentAge"
        android:ems="10"
        android:inputType="number"
        android:hint="Student Age"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:orientation="horizontal">
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/addStudent"
            android:onClick="addStudent"
            android:text="ADD"/>
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/updateStudent"
            android:onClick="updateStudent"
            android:text="UPDATE"
            android:layout_marginLeft="20dp"/>
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/deleteStudent"
            android:onClick="deleteStudent"
            android:text="DELETE"
            android:layout_marginLeft="20dp"/>
    </LinearLayout>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:layout_marginLeft="130dp"
        android:text="Load Details"
        android:onClick="loadStudent"/>
    <ListView
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:id="@+id/studentListView"
        android:layout_weight="1"
        android:divider="@android:color/transparent"
        android:dividerHeight="5.0sp"/>

</LinearLayout>

Main Activity.kt

package com.example.prac9

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.os.Handler
import android.view.View
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.EditText
import android.widget.ListView
import android.widget.Toast

class MainActivity : AppCompatActivity() {
    private lateinit var listView: ListView
    private lateinit var studentId: EditText
    private lateinit var studentName: EditText
    private lateinit var studentAge: EditText
    private lateinit var dbHandler: MyDBHandler
    private lateinit var adapter: ArrayAdapter<Student>
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        listView= findViewById(R.id.studentListView)
        studentId= findViewById(R.id.studentId)
        studentAge = findViewById(R.id.studentAge)
        studentName =findViewById(R.id.studentName)
        dbHandler = MyDBHandler(this)
        adapter= ArrayAdapter(this,android.R.layout.simple_list_item_1,dbHandler.loadHandler())
        listView.adapter=adapter
        listView.onItemClickListener = AdapterView.OnItemClickListener{
            _, _, position,_ ->
            val student =adapter.getItem(position)
            studentId.setText(student?.id.toString())
            studentName.setText(student?.name)
            studentAge.setText(student?.age.toString())
        }
    }
    fun addStudent(view: View) {
        if (studentId.text.toString().isNotEmpty() &&
            studentName.text.toString().isNotEmpty() &&
            studentAge.text.toString().isNotEmpty()
        ) {
            val id = studentId.text.toString().toInt()
            val name = studentName.text.toString()
            val age = studentAge.text.toString().toInt()
            val student = Student(id, name, age)
            val insertId = dbHandler.addHandler(student)
            if (insertId == -1L) {
                Toast.makeText(this, "Record Already Exists", Toast.LENGTH_SHORT).show()
            } else {
                studentId.setText("")
                studentAge.setText("")
                studentName.setText("")
                adapter.add(student)
                adapter.notifyDataSetChanged()
                Toast.makeText(this, "record added", Toast.LENGTH_SHORT)
                    .show()
            }
        }else{
            Toast.makeText(this, "Please fill correct id, name and address", Toast.LENGTH_SHORT)
                .show()
        }
    }
    fun loadStudent(view: View){
        adapter.clear()
        adapter.addAll(dbHandler.loadHandler())
    }
    fun updateStudent(view: View) {
        if (studentId.text.toString().isNotEmpty() &&
            studentName.text.toString().isNotEmpty() &&
            studentAge.text.toString().isNotEmpty()
        ) {
            val id = studentId.text.toString().toInt()
            val name = studentName.text.toString()
            val age = studentAge.text.toString().toInt()
            val student = Student(id, name, age)
            val rowsAffected = dbHandler.updateHandler(student)
            if (rowsAffected > 0) {
                adapter.clear()
                adapter.addAll(dbHandler.loadHandler())
                Toast.makeText(this, "Record Updated", Toast.LENGTH_SHORT).show()
            } else {
                Toast.makeText(this, "please fill the correct ID, Name and Age", Toast.LENGTH_SHORT)
                    .show()
            }
        }
    }
    fun deleteStudent(view: View) {
        if (studentId.text.toString().isNotEmpty()) {
            val id = studentId.text.toString().toInt()
            val rowsAffected = dbHandler.deleteHandler(id)
            if (rowsAffected > 0) {
                adapter.clear()
                adapter.addAll(dbHandler.loadHandler())
                studentId.setText("")
                studentAge.setText("")
                studentName.setText("")
                Toast.makeText(this, "Record Deleted", Toast.LENGTH_SHORT).show()
            } else {
                Toast.makeText(this, "please fill the correct ID, Name and Age", Toast.LENGTH_SHORT)
                    .show()
            }
        }
    }
}

My DB handler.kt

package com.example.prac9

import android.content.ContentValues
import android.content.Context
import android.database.sqlite.SQLiteDatabase
import android.database.sqlite.SQLiteOpenHelper
import android.security.identity.AccessControlProfileId

private const val DATABASE_VERSION=1
private const val DATABASE_NAME="myDatabase"
private const val TABLE_NAME="students"
private const val COLUMN_ID="id"
private const val COLUMN_NAME="name"
private const val COLUMN_AGE="age"
class MyDBHandler (context: Context):SQLiteOpenHelper(context, DATABASE_NAME,null, DATABASE_VERSION) {
    override fun onCreate(db: SQLiteDatabase?) {
        val CREATE_TABLE="CREATE TABLE $TABLE_NAME($COLUMN_ID INTEGER PRIMARY KEY,$COLUMN_NAME TEXT,$COLUMN_AGE INTEGER)"
        db?.execSQL(CREATE_TABLE)
    }

    override fun onUpgrade(db: SQLiteDatabase?, oldVersion: Int, newVersion: Int) {
        db?.execSQL("DROP TABLE IF EXISTS $TABLE_NAME")
            onCreate(db)
    }
    fun loadHandler():List<Student>{
        val query = "SELECT * FROM $TABLE_NAME"
        val db=this.readableDatabase
        val cursor = db.rawQuery(query,null)
        val students = mutableListOf<Student>()
        if (cursor.moveToFirst()){
        do{
            val id = cursor.getInt(0)
            val name = cursor.getString(1)
            val age = cursor.getInt(2)
            students.add(Student(id,name,age))
        }while (cursor.moveToNext())
        }
        cursor.close()
        db.close()
        return students
    }
    fun addHandler(student: Student):Long{
        val values = ContentValues()
        values.put(COLUMN_ID,student.id)
        values.put(COLUMN_NAME,student.name)
        values.put(COLUMN_AGE,student.age)
        val db = this.writableDatabase
        val result = db.insert(TABLE_NAME,null,values)
        db.close()
        return result
    }
    fun updateHandler(student: Student):Int{
        val values = ContentValues()
        values.put(COLUMN_NAME,student.name)
        values.put(COLUMN_AGE,student.age)
        val db = this.writableDatabase
        val result = db.update(TABLE_NAME,values,"$COLUMN_ID=?", arrayOf(student.id.toString())
        )
        db.close()
        return result
    }
    fun deleteHandler(id: Int):Int{
        val db = this.writableDatabase
        val result= db.delete(TABLE_NAME,"$COLUMN_ID=?", arrayOf(id.toString())
        )
        db.close()
        return result
    }
}
Student.kt

package com.example.prac9

import android.security.identity.AccessControlProfileId

class Student(val  id: Int,val name: String,val age: Int) {
    override fun toString(): String {
        return "ID: $id \nName: $name \nAge: $age"
    }
}

Practical 10
Programming threads, handles and asynchronized programs
Pract 10th A

Main Activity.kt
package com.example.prac10

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.os.Handler
import android.os.Looper
import android.widget.Button
import android.widget.TextView
import kotlin.random.Random

class MainActivity : AppCompatActivity() {
    private lateinit var handler: Handler
    private lateinit var runnable: Runnable
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        handler= Handler(Looper.getMainLooper())
        val numberTextView = findViewById<TextView>(R.id.numberTextView)
        val generateNumber= findViewById<Button>(R.id.generateButton)
        generateNumber.setOnClickListener {
            val thread =Thread{
                Thread.sleep(3000)
                val random = Random
                val number = random.nextInt(1000)
                handler.post{
                    numberTextView.text=number.toString()
                }
            }
            thread.start()
        }
    }
}

Main Activity.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/generateButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:onClick="generateNumber"
        android:text="Generate Number" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/numberTextView"
        android:text="0"/>

</LinearLayout>

Practical 10th B:

Main Activity.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    tools:context=".MainActivity">

    <ImageView
        android:layout_width="500dp"
        android:layout_height="500dp"
        android:id="@+id/image_view"
        />

</LinearLayout>

Main Activity.kt

package com.example.prac10b
import android.graphics.Bitmap
import android.graphics.BitmapFactory
import android.os.AsyncTask
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log
import android.widget.ImageView
import java.net.URL
class MainActivity : AppCompatActivity() {
    private lateinit var imageView: ImageView
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        imageView =findViewById(R.id.image_view)
        DownloadImageTask().execute("https://scx2.b-cdn.net/gfx/news/hires/2015/whatsimporta.jpg")
    }
    inner class DownloadImageTask:AsyncTask<String, Void, Bitmap>(){
        override fun doInBackground(vararg urls: String?): Bitmap? {
            val url= urls[0]
            var bitmap: Bitmap?=null
            try {
                val inputStream=URL(url).openStream()
                bitmap=BitmapFactory.decodeStream(inputStream)
            }catch (e: Exception){
                Log.e("Error",e.message?:"Unknown error")
                e.printStackTrace()
            }
            return bitmap
        }
        override fun onPostExecute(result: Bitmap?) {
            if (result!=null){
                imageView.setImageBitmap(result)
            }
        }
    }
}
Manifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Prac10b"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

Practical 11
Programming Media API and Telephone API
MainActivity.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:background="@color/black"
    android:layout_gravity="center">
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/audio"
        android:text="Audio"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        android:layout_marginTop="200dp"
        android:layout_marginLeft="150dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/video"
        android:text="Video"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="@+id/audio"
        android:layout_marginTop="200dp"
        android:layout_marginLeft="150dp"/>
</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.kt:
package com.example.abc

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        var audio = findViewById<Button>(R.id.audio)
        var video = findViewById<Button>(R.id.video)
        audio.setOnClickListener {
            var intent = Intent(this@MainActivity,Audio::class.java)
            startActivity(intent)
        }
        video.setOnClickListener {
            var intent = Intent(this@MainActivity,Video::class.java)
            startActivity(intent)
        }
    }
}

main_video.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/black"
    tools:context=".Video">
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/textView"
        android:layout_marginTop="20dp"
        android:gravity="center"
        android:text="Duaa"
        android:textColor="@color/white"
        android:layout_marginBottom="383dp"
        android:textSize="50dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>
    <VideoView
        android:layout_width="match_parent"
        android:layout_height="400dp"
        android:id="@+id/videoView1"
        app:layout_constraintTop_toBottomOf="@+id/textView"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"/>
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/playButton"
        app:layout_constraintTop_toBottomOf="@+id/videoView1"
        android:text="Play"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"/>
</androidx.constraintlayout.widget.ConstraintLayout>

video.kt:
package com.example.abc
import android.net.Uri
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.MediaController
import android.widget.VideoView
class Video : AppCompatActivity() {
    private lateinit var videoView: VideoView
    private lateinit var mediaController: MediaController
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_video)
        var playButton = findViewById<Button>(R.id.playButton)
        videoView = findViewById(R.id.videoView1)
        mediaController= MediaController(this)
        videoView.setMediaController(mediaController)
        videoView.setVideoURI(Uri.parse("android.resource://com.example.abc/${R.raw.sample}"))

        playButton.setOnClickListener {
            if (videoView.isPlaying){
                videoView.pause()
                playButton.text="Play"
            }else{
                videoView.start()
                playButton.text="Pause"
            }
        }
    }
    override fun onDestroy() {
        super.onDestroy()
        videoView.stopPlayback()
    }
}

main_audio.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/black"
    tools:context=".Audio">
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/textView"
        android:layout_marginTop="20dp"
        android:gravity="center"
        android:text="Humnava mere"
        android:textColor="@color/white"
        android:layout_marginBottom="383dp"
        android:textSize="50dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>
    <ImageView
        android:layout_width="match_parent"
        android:layout_height="300dp"
        android:id="@+id/logo"
        android:layout_marginTop="20dp"

        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView"/>
    <SeekBar
        android:layout_width="match_parent"
        android:layout_height="70dp"
        android:id="@+id/seekBar"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"
        app:layout_constraintTop_toBottomOf="@+id/logo"/>
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/playButton"
        app:layout_constraintTop_toBottomOf="@+id/seekBar"
        android:text="Play"
        android:layout_marginTop="20dp"
        android:layout_marginLeft="20dp"
        android:layout_marginRight="20dp"/>
</androidx.constraintlayout.widget.ConstraintLayout>

Audio.kt
package com.example.abc


import android.media.MediaPlayer
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.SeekBar
import kotlinx.coroutines.*

class Audio : AppCompatActivity() {
    private lateinit var mediaPlayer: MediaPlayer
    private lateinit var seekBar: SeekBar
    private var seekBarUpdateJob: Job? = null
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_audio)
        var playButton = findViewById<Button>(R.id.playButton)
        seekBar = findViewById(R.id.seekBar)
        mediaPlayer = MediaPlayer.create(this, R.raw.humnava_mere)
        seekBar.max = mediaPlayer.duration
        seekBar.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener {
            override fun onProgressChanged(p0: SeekBar?, p1: Int, p2: Boolean) {
                if (p2) {
                    mediaPlayer.seekTo(p1)
                }
            }

            override fun onStartTrackingTouch(p0: SeekBar?) {

            }

            override fun onStopTrackingTouch(p0: SeekBar?) {

            }
        })
        playButton.setOnClickListener {
            if (mediaPlayer.isPlaying) {
                mediaPlayer.pause()
                playButton.text = "Play"
                seekBarUpdateJob?.cancel()
            } else {
                mediaPlayer.start()
                playButton.text = "pause"
                seekBarUpdateJob = GlobalScope.launch(Dispatchers.Main) {
                    while (mediaPlayer.isPlaying) {
                        seekBar.progress = mediaPlayer.currentPosition
                        delay(100)
                    }
                }
            }
        }
    }

    override fun onDestroy() {
        super.onDestroy()
        seekBarUpdateJob?.cancel()
        mediaPlayer.release()
    }
}

AndroidManifest.xml:
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.abc">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:usesCleartextTraffic="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Abc"
        tools:targetApi="31">
        <activity
            android:name=".Audio"
            android:exported="true">

        </activity>
        <activity
            android:name=".Video"
            android:exported="true">

        </activity>
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

Pract 12th :
Programming Security and permissions

Main Activity.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="@color/black"
    android:gravity="center"
    tools:context=".MainActivity">
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="permissions"
        android:textSize="30dp"
        android:textColor="@color/white" />
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/Contacts"
        android:text="Access Contacts"
        android:layout_marginTop="20dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/Calendar"
        android:text="Access Calendar"
        android:layout_marginTop="20dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/Camera"
        android:text="Access Camera"
        android:layout_marginTop="20dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/Gallery"
        android:text="Access Gallery"
        android:layout_marginTop="20dp"/>
</LinearLayout>

Main Activity.kt

package com.example.prac12

import android.content.pm.PackageManager
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.Toast
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat

class MainActivity : AppCompatActivity() {
    private val CONTACTS_REQUEST_CODE = 1
    private val CALENDAR_REQUEST_CODE = 2
    private val CAMERA_REQUEST_CODE = 3
    private val MEDIA_REQUEST_CODE = 4

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        val btn_contact=findViewById<Button>(R.id.Contacts)
        val btn_calender=findViewById<Button>(R.id.Calendar)
        val btn_camera=findViewById<Button>(R.id.Camera)
        val btn_gallery=findViewById<Button>(R.id.Gallery)

        btn_contact.setOnClickListener {
            requestedPermissions(android.Manifest.permission.READ_CONTACTS,CONTACTS_REQUEST_CODE)
        }
        btn_calender.setOnClickListener {
            requestedPermissions(android.Manifest.permission.READ_CALENDAR,CALENDAR_REQUEST_CODE)
        }
        btn_camera.setOnClickListener {
            requestedPermissions(android.Manifest.permission.CAMERA,CAMERA_REQUEST_CODE)
        }
        btn_gallery.setOnClickListener {
            requestedPermissions(android.Manifest.permission.ACCESS_MEDIA_LOCATION,MEDIA_REQUEST_CODE)
        }
    }
    private fun requestedPermissions(permission: String,requestCode: Int){
        if (ContextCompat.checkSelfPermission(this,permission)!=PackageManager.PERMISSION_GRANTED){
            ActivityCompat.requestPermissions(this, arrayOf(permission),requestCode)
        }else{
            Toast.makeText(this,"Permission granted",Toast.LENGTH_SHORT).show()
        }
    }
}

Manifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.READ_CONTACTS"/>
    <uses-permission android:name="android.permission.READ_CALENDAR"/>
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.ACCESS_MEDIA_LOCATION"/>
    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Prac12"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>












Pract 13th :
Programming Network Communications and Services (JSON)
Main Activity.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:background="@color/black"
    tools:context=".MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="SENDING DATA"
        android:textColor="@color/white"
        android:textSize="30dp"
        />
    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/name"
        android:textSize="20dp"
        android:textColor="@color/white"
        android:hint="ENTER YOUR NAME"
        android:textColorHint="@color/black"
        android:background="@color/grey"
        android:layout_marginTop="25dp"
        android:layout_marginLeft="25dp"
        android:layout_marginRight="25dp"/>
    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/age"
        android:textSize="20dp"
        android:textColor="@color/white"
        android:hint="ENTER YOUR AGE"
        android:textColorHint="@color/black"
        android:background="@color/grey"
        android:layout_marginTop="25dp"
        android:layout_marginLeft="25dp"
        android:layout_marginRight="25dp"/>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/submit"
        android:text="SUBMIT !"
        android:backgroundTint="@color/grey"
        android:layout_marginTop="25dp"
        android:layout_marginLeft="25dp"
        android:layout_marginRight="25dp"/>

</LinearLayout>


Main Activity.kt
package com.example.prac13

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Toast
import com.example.prac13.databinding.ActivityMainBinding
import com.google.firebase.database.DatabaseReference
import com.google.firebase.database.FirebaseDatabase

class MainActivity : AppCompatActivity() {
    private lateinit var binding: ActivityMainBinding
    private lateinit var database: DatabaseReference
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding=ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)

        binding.submit.setOnClickListener {
            val name = binding.name.text.toString()
            val age = binding.age.text.toString()
            database=FirebaseDatabase.getInstance().getReference("Users")
            val User = User(name, age)
            database.child(name).setValue(User).addOnSuccessListener {
                binding.name.text.clear()
                binding.age.text.clear()
                Toast.makeText(this,"Successfully registered",Toast.LENGTH_SHORT).show()
            }.addOnFailureListener {
                Toast.makeText(this,"Failed",Toast.LENGTH_SHORT).show()
            }
        }
    }
}

User.kt

package com.example.prac13

data class User(val name:String?=null,val age:String?=null)

buildgradle:

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.example.prac13'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.prac13"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-database-ktx:20.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}



